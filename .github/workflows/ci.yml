name: CI/CD Pipeline

on:
  push:
    branches: [ develop, main ]
  pull_request:
    branches: [ develop, main ]

jobs:
  deploy-staging:
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - name: üîç Debug Secrets (host, user, key)
        run: |
          echo "HOST: ${{ secrets.PRODUCTION_HOST }}"
          echo "USER: ${{ secrets.PRODUCTION_USER }}"
          echo "PORT: ${{ secrets.PRODUCTION_PORT }}"
          if [ -z "${{ secrets.PRODUCTION_SSH_KEY }}" ]; then
            echo "‚ùå PRODUCTION_SSH_KEY is EMPTY"
          else
            echo "‚úÖ PRODUCTION_SSH_KEY is SET"
          fi
      - name: Deploy to Staging Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.PRODUCTION_USER }}
          key: ${{ secrets.PRODUCTION_SSH_KEY }}
          port: ${{ secrets.PRODUCTION_PORT }}
          script: |
            cd /martfury-dev
            git pull origin develop
            composer install --no-interaction --prefer-dist --optimize-autoloader
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            npm ci
            npm run production

  deploy-production:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: üîç Debug Secrets (host, user, key)
        run: |
          echo "HOST: ${{ secrets.PRODUCTION_HOST }}"
          echo "USER: ${{ secrets.PRODUCTION_USER }}"
          echo "PORT: ${{ secrets.PRODUCTION_PORT }}"
          if [ -z "${{ secrets.PRODUCTION_SSH_KEY }}" ]; then
            echo "‚ùå PRODUCTION_SSH_KEY is EMPTY"
          else
            echo "‚úÖ PRODUCTION_SSH_KEY is SET"
          fi
      - name: Deploy to Production Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.PRODUCTION_USER }}
          key: ${{ secrets.PRODUCTION_SSH_KEY }}
          port: ${{ secrets.PRODUCTION_PORT }}
          script: |
            cd /martfury
            git pull origin main
            composer install --no-interaction --no-dev --prefer-dist --optimize-autoloader
            chmod -R 777 storage bootstrap/cache
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            npm ci
            npm run production
