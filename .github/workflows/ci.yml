name: CI/CD Pipeline

on:
  push:
    branches: [ develop, main ]
  pull_request:
    branches: [ develop, main ]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, dom, fileinfo, mysql, gd, curl, zip, pdo, sqlite, pdo_mysql, bcmath, intl, exif, iconv
          coverage: xdebug

      - uses: actions/checkout@v4

      - name: Install Composer Dependencies
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Directory Permissions
        run: chmod -R 777 storage bootstrap/cache

      - name: Install NPM dependencies
        run: npm ci

      - name: Compile assets
        run: npm run production

      - name: Run Laravel Tests
        run: php artisan test

      - name: Run Code Quality Checks
        run: |
          composer require laravel/pint --dev
          ./vendor/bin/pint --test
          ./vendor/bin/phpstan analyse --memory-limit=2G

  deploy-staging:
    needs: test
    if: github.ref == 'refs/heads/develop' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:

      - name: Deploy to Staging Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.STAGING_HOST }}
          username: ${{ secrets.STAGING_USER }}
          key: ${{ secrets.STAGING_SSH_KEY }}
          port: ${{ secrets.STAGING_PORT }}
          script: |
            cd /martfury-dev
            git pull origin develop
            composer install --no-interaction --prefer-dist --optimize-autoloader
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            npm ci
            npm run production

  deploy-production:
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Deploy to Production Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.PRODUCTION_HOST }}
          username: ${{ secrets.PRODUCTION_USER }}
          key: ${{ secrets.PRODUCTION_SSH_KEY }}
          port: ${{ secrets.PRODUCTION_PORT }}
          script: |
            cd /martfury
            git pull origin main
            composer install --no-interaction --no-dev --prefer-dist --optimize-autoloader
            php artisan config:cache
            php artisan route:cache
            php artisan view:cache
            npm ci
            npm run production
